#include "precompile.h"
#include "renderstylelookuptables.h"

//constructs the object and initializes all of the tables
CRenderStyleLookupTables::CRenderStyleLookupTables()
{
	//setup the alpha test map
	m_nAlphaTest[RENDERSTYLE_NOALPHATEST]				= D3DCMP_ALWAYS;
	m_nAlphaTest[RENDERSTYLE_ALPHATEST_LESS]			= D3DCMP_LESS;
	m_nAlphaTest[RENDERSTYLE_ALPHATEST_LESSEQUAL]		= D3DCMP_LESSEQUAL;
	m_nAlphaTest[RENDERSTYLE_ALPHATEST_GREATER]			= D3DCMP_GREATER;
	m_nAlphaTest[RENDERSTYLE_ALPHATEST_GREATEREQUAL]	= D3DCMP_GREATEREQUAL;
	m_nAlphaTest[RENDERSTYLE_ALPHATEST_EQUAL]			= D3DCMP_EQUAL;
	m_nAlphaTest[RENDERSTYLE_ALPHATEST_NOTEQUAL]		= D3DCMP_NOTEQUAL;

	//fill modes
	m_nFillMode[RENDERSTYLE_WIRE] = D3DFILL_WIREFRAME;
	m_nFillMode[RENDERSTYLE_FILL] = D3DFILL_SOLID;

	//blend modes
	m_nSrcBlendMode[RENDERSTYLE_NOBLEND]					= D3DBLEND_ONE;
	m_nDstBlendMode[RENDERSTYLE_NOBLEND]					= D3DBLEND_ZERO;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_ADD]					= D3DBLEND_ONE;
	m_nDstBlendMode[RENDERSTYLE_BLEND_ADD]					= D3DBLEND_ONE;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_SATURATE]				= D3DBLEND_INVDESTCOLOR;
	m_nDstBlendMode[RENDERSTYLE_BLEND_SATURATE]				= D3DBLEND_ONE;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MOD_SRCALPHA]			= D3DBLEND_SRCALPHA;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MOD_SRCALPHA]			= D3DBLEND_INVSRCALPHA;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MOD_SRCCOLOR]			= D3DBLEND_SRCCOLOR;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MOD_SRCCOLOR]			= D3DBLEND_INVSRCCOLOR;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MOD_DSTCOLOR]			= D3DBLEND_DESTCOLOR;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MOD_DSTCOLOR]			= D3DBLEND_INVDESTCOLOR;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MUL_SRCCOL_DSTCOL]	= D3DBLEND_SRCCOLOR;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MUL_SRCCOL_DSTCOL]	= D3DBLEND_DESTCOLOR;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MUL_SRCCOL_ONE]		= D3DBLEND_SRCCOLOR;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MUL_SRCCOL_ONE]		= D3DBLEND_ONE;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MUL_SRCALPHA_ZERO]	= D3DBLEND_SRCALPHA;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MUL_SRCALPHA_ZERO]	= D3DBLEND_ZERO;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MUL_SRCALPHA_ONE]		= D3DBLEND_SRCALPHA;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MUL_SRCALPHA_ONE]		= D3DBLEND_ONE;
	m_nSrcBlendMode[RENDERSTYLE_BLEND_MUL_DSTCOL_ZERO]		= D3DBLEND_DESTCOLOR;
	m_nDstBlendMode[RENDERSTYLE_BLEND_MUL_DSTCOL_ZERO]		= D3DBLEND_ZERO;

	//Z buffer mode
	m_bZReadEnable[RENDERSTYLE_ZRW]		= true;
	m_bZWriteEnable[RENDERSTYLE_ZRW]	= true;
	m_bZReadEnable[RENDERSTYLE_ZRO]		= true;
	m_bZWriteEnable[RENDERSTYLE_ZRO]	= false;
	m_bZReadEnable[RENDERSTYLE_NOZ]		= false;
	m_bZWriteEnable[RENDERSTYLE_NOZ]	= false;

	//Cull mode
	m_nCullMode[RENDERSTYLE_CULL_NONE]	= D3DCULL_NONE;
	m_nCullMode[RENDERSTYLE_CULL_CCW]	= D3DCULL_CCW;
	m_nCullMode[RENDERSTYLE_CULL_CW]	= D3DCULL_CW;

	//Color operations
	m_nColorOp[RENDERSTYLE_COLOROP_DISABLE]				= D3DTOP_DISABLE;
	m_nColorOp[RENDERSTYLE_COLOROP_SELECTARG1]			= D3DTOP_SELECTARG1;
	m_nColorOp[RENDERSTYLE_COLOROP_SELECTARG2]			= D3DTOP_SELECTARG2;
	m_nColorOp[RENDERSTYLE_COLOROP_MODULATE]			= D3DTOP_MODULATE;
	m_nColorOp[RENDERSTYLE_COLOROP_MODULATE2X]			= D3DTOP_MODULATE2X;
	m_nColorOp[RENDERSTYLE_COLOROP_MODULATEALPHA]		= D3DTOP_BLENDCURRENTALPHA;
	m_nColorOp[RENDERSTYLE_COLOROP_MODULATETEXALPHA]	= D3DTOP_BLENDTEXTUREALPHA;
	m_nColorOp[RENDERSTYLE_COLOROP_MODULATETFACTOR]		= D3DTOP_BLENDFACTORALPHA;
	m_nColorOp[RENDERSTYLE_COLOROP_ADD]					= D3DTOP_ADD;
	m_nColorOp[RENDERSTYLE_COLOROP_DOTPRODUCT3]			= D3DTOP_DOTPRODUCT3;
	m_nColorOp[RENDERSTYLE_COLOROP_BUMPENVMAP]			= D3DTOP_BUMPENVMAP;
	m_nColorOp[RENDERSTYLE_COLOROP_BUMPENVMAPLUM]		= D3DTOP_BUMPENVMAPLUMINANCE;
	m_nColorOp[RENDERSTYLE_COLOROP_ADDSIGNED]			= D3DTOP_ADDSIGNED;
	m_nColorOp[RENDERSTYLE_COLOROP_ADDSIGNED2X]			= D3DTOP_ADDSIGNED2X;
	m_nColorOp[RENDERSTYLE_COLOROP_SUBTRACT]			= D3DTOP_SUBTRACT;
	m_nColorOp[RENDERSTYLE_COLOROP_ADDMODALPHA]			= D3DTOP_MODULATEALPHA_ADDCOLOR;
	m_nColorOp[RENDERSTYLE_COLOROP_ADDMODINVALPHA]		= D3DTOP_MODULATEINVALPHA_ADDCOLOR;

	//Alpha operations
	m_nAlphaOp[RENDERSTYLE_COLOROP_DISABLE]				= D3DTOP_DISABLE;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_SELECTARG1]			= D3DTOP_SELECTARG1;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_SELECTARG2]			= D3DTOP_SELECTARG2;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_MODULATE]			= D3DTOP_MODULATE;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_MODULATEALPHA]		= D3DTOP_BLENDCURRENTALPHA;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_MODULATETEXALPHA]	= D3DTOP_BLENDTEXTUREALPHA;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_MODULATETFACTOR]		= D3DTOP_BLENDFACTORALPHA;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_ADD]					= D3DTOP_ADD;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_ADDSIGNED]			= D3DTOP_ADDSIGNED;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_ADDSIGNED2X]			= D3DTOP_ADDSIGNED2X;
	m_nAlphaOp[RENDERSTYLE_ALPHAOP_SUBTRACT]			= D3DTOP_SUBTRACT;

	//Color arguments
	m_nColorArg[RENDERSTYLE_COLORARG_CURRENT]			= D3DTA_CURRENT;
	m_nColorArg[RENDERSTYLE_COLORARG_DIFFUSE]			= D3DTA_DIFFUSE;
	m_nColorArg[RENDERSTYLE_COLORARG_TEXTURE]			= D3DTA_TEXTURE;
	m_nColorArg[RENDERSTYLE_COLORARG_TFACTOR]			= D3DTA_TFACTOR;

	//Alpha arguments
	m_nAlphaArg[RENDERSTYLE_ALPHAARG_CURRENT]			= D3DTA_CURRENT;
	m_nAlphaArg[RENDERSTYLE_ALPHAARG_DIFFUSE]			= D3DTA_DIFFUSE;
	m_nAlphaArg[RENDERSTYLE_ALPHAARG_TEXTURE]			= D3DTA_TEXTURE;
	m_nAlphaArg[RENDERSTYLE_ALPHAARG_TFACTOR]			= D3DTA_TFACTOR;
	
	//UV source information
	m_nUVSource[RENDERSTYLE_UVFROM_MODELDATA_UVSET1]				= D3DTSS_TCI_PASSTHRU | 0;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_MODELDATA_UVSET1]			= false;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_MODELDATA_UVSET1]		= false;
	m_nUVSource[RENDERSTYLE_UVFROM_MODELDATA_UVSET2]				= D3DTSS_TCI_PASSTHRU | 1;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_MODELDATA_UVSET2]			= false;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_MODELDATA_UVSET2]		= false;
	m_nUVSource[RENDERSTYLE_UVFROM_MODELDATA_UVSET3]				= D3DTSS_TCI_PASSTHRU | 2;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_MODELDATA_UVSET3]			= false;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_MODELDATA_UVSET3]		= false;
	m_nUVSource[RENDERSTYLE_UVFROM_MODELDATA_UVSET4]				= D3DTSS_TCI_PASSTHRU | 3;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_MODELDATA_UVSET4]			= false;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_MODELDATA_UVSET4]		= false;

	m_nUVSource[RENDERSTYLE_UVFROM_CAMERASPACENORMAL]				= D3DTSS_TCI_CAMERASPACENORMAL;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_CAMERASPACENORMAL]			= true;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_CAMERASPACENORMAL]		= false;
	m_nUVSource[RENDERSTYLE_UVFROM_CAMERASPACEPOSITION]				= D3DTSS_TCI_CAMERASPACEPOSITION;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_CAMERASPACEPOSITION]		= true;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_CAMERASPACEPOSITION]	= false;
	m_nUVSource[RENDERSTYLE_UVFROM_CAMERASPACEREFLTVECT]			= D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_CAMERASPACEREFLTVECT]		= true;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_CAMERASPACEREFLTVECT]	= false;

	m_nUVSource[RENDERSTYLE_UVFROM_WORLDSPACENORMAL]				= D3DTSS_TCI_CAMERASPACENORMAL;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_WORLDSPACENORMAL]			= true;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_WORLDSPACENORMAL]		= true;
	m_nUVSource[RENDERSTYLE_UVFROM_WORLDSPACEPOSITION]				= D3DTSS_TCI_CAMERASPACEPOSITION;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_WORLDSPACEPOSITION]			= true;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_WORLDSPACEPOSITION]	= true;
	m_nUVSource[RENDERSTYLE_UVFROM_WORLDSPACEREFLTVECT]				= D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR;
	m_bUVSourceStage[RENDERSTYLE_UVFROM_WORLDSPACEREFLTVECT]		= true;
	m_bUVSourceWorldSpace[RENDERSTYLE_UVFROM_WORLDSPACEREFLTVECT]	= true;

	//texture addressing
	m_nAddress[RENDERSTYLE_UVADDR_WRAP]			= D3DTADDRESS_WRAP;
	m_nAddress[RENDERSTYLE_UVADDR_CLAMP]		= D3DTADDRESS_CLAMP;
	m_nAddress[RENDERSTYLE_UVADDR_MIRROR]		= D3DTADDRESS_MIRROR;
	m_nAddress[RENDERSTYLE_UVADDR_MIRRORONCE]	= D3DTADDRESS_MIRRORONCE;

	//texture filtering
	m_nMagFilter[RENDERSTYLE_TEXFILTER_POINT]		= D3DTEXF_POINT;
	m_nMinFilter[RENDERSTYLE_TEXFILTER_POINT]		= D3DTEXF_POINT;
	m_nMipFilter[RENDERSTYLE_TEXFILTER_POINT]		= D3DTEXF_NONE;

	m_nMagFilter[RENDERSTYLE_TEXFILTER_BILINEAR]	= D3DTEXF_LINEAR;
	m_nMinFilter[RENDERSTYLE_TEXFILTER_BILINEAR]	= D3DTEXF_LINEAR;
	m_nMipFilter[RENDERSTYLE_TEXFILTER_BILINEAR]	= D3DTEXF_POINT;

	m_nMagFilter[RENDERSTYLE_TEXFILTER_TRILINEAR]	= D3DTEXF_LINEAR;
	m_nMinFilter[RENDERSTYLE_TEXFILTER_TRILINEAR]	= D3DTEXF_LINEAR;
	m_nMipFilter[RENDERSTYLE_TEXFILTER_TRILINEAR]	= D3DTEXF_LINEAR;

	m_nMagFilter[RENDERSTYLE_TEXFILTER_ANISOTROPIC]	= D3DTEXF_ANISOTROPIC;
	m_nMinFilter[RENDERSTYLE_TEXFILTER_ANISOTROPIC]	= D3DTEXF_ANISOTROPIC;
	m_nMipFilter[RENDERSTYLE_TEXFILTER_ANISOTROPIC]	= D3DTEXF_LINEAR;

	m_nMagFilter[RENDERSTYLE_TEXFILTER_POINT_PTMIP]	= D3DTEXF_POINT;
	m_nMinFilter[RENDERSTYLE_TEXFILTER_POINT_PTMIP]	= D3DTEXF_POINT;
	m_nMipFilter[RENDERSTYLE_TEXFILTER_POINT_PTMIP]	= D3DTEXF_POINT;
}
